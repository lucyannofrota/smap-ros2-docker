version: '2.2'

services:

  ros2-zed:
    network_mode: "host"
    image: ros2:zed
    container_name: zed-camera-foxy
    healthcheck:
      test: ["CMD", "bash", "-c", ". /workspace/install/setup.bash; ros2 node list | grep -q /zed2/zed_node"]
      start_period: 1m
      interval: 5s
      timeout: 1s
      retries: 300
    build:
      network: host
      context: ./Docker
      dockerfile: ./Dockerfile_zed_foxy.dockerfile
      # target: zed_wrapper
      args:
        IMAGE_NAME: dustynv/ros:foxy-ros-base-l4t-r35.2.1
        #IMAGE_NAME: dustynv/ros:noetic-ros-base-l4t-r35.2.1
        # ROS
        ROS_DISTRO: foxy
        WORKSPACE: /workspace
        RMW_IMPLEMENTATION_INSTALL: rmw-cyclonedds-cpp
        RMW_IMPLEMENTATION: rmw_cyclonedds_cpp
        ROS_DOMAIN_ID: 7
    privileged: true
    # Not necessary when running in host network mode.
    #ports:
    #  - 8080:8080 # Passthrough for Jupyter Notebook
    #  - 1234:1234 # Passthrough for SSH
    environment:
      - "DISPLAY"
      - "QT_X11_NO_MITSHM=1" #fix some QT bugs
    volumes: 
      - /tmp/.X11-unix:/tmp/.X11-unix # Share X11 socket with container
      - $HOME/.Xauthority:/home/ros/.Xauthority # Share X11 permissions

    cap_add:
      - SYS_PTRACE
    command: >
      bash -c "
        . install/setup.bash && 
        RMW_IMPLEMENTATION=rmw_cyclonedds_cpp ROS_DOMAIN_ID=7 ros2 launch zed_wrapper zed2.launch.py publish_tf:=false
      "

  p3dx:
    network_mode: "host"
    image: p3dx
    container_name: p3dx
    build:
      network: host
      context: ./Docker
      dockerfile: ./Dockerfile_p3dx.dockerfile
      target: setup #ros_aria 
      args:
        IMAGE_NAME: dustynv/ros:noetic-desktop-l4t-r35.2.1

        # ROS
        ROS_DISTRO: noetic
        WORKSPACE: /ros_workspace

        # Entrypoint
        ENTRYPOINT_HOST_PATH: entrypoints/p3dx_entrypoint.bash
    privileged: true
    # Not necessary when running in host network mode.
    #ports:
    #  - 8080:8080 # Passthrough for Jupyter Notebook
    #  - 1234:1234 # Passthrough for SSH
    environment:
      - "DISPLAY"
      - "QT_X11_NO_MITSHM=1" #fix some QT bugs
    volumes: 
      - /tmp/.X11-unix:/tmp/.X11-unix # Share X11 socket with container
      - $HOME/.Xauthority:/home/ros/.Xauthority # Share X11 permissions
      - ./container_files/ros-aria:/ros_workspace


    cap_add:
      - SYS_PTRACE
    command: bash -c ". /ros_workspace/devel/setup.bash && roslaunch robot robot.launch"

  ros2-env:
    network_mode: "host"
    image: ros2:env
    container_name: ros2-env
    build:
      network: host
      context: ./Docker
      dockerfile: ./Dockerfile_env.dockerfile
      target: setup #ros_aria 
      args:
        IMAGE_NAME: dustynv/ros:foxy-desktop-l4t-r35.2.1
        UBUNTU_VERSION: 20.04
        CUDA_VERSION: 11.4.2

        # ROS
        ROS_DISTRO: foxy
        WORKSPACE: /workspace
        RMW_IMPLEMENTATION_INSTALL: rmw-cyclonedds-cpp
        RMW_IMPLEMENTATION: rmw_cyclonedds_cpp
        ROS_DOMAIN_ID: 7

        # Entrypoint
        ENTRYPOINT_HOST_PATH: entrypoints/env_entrypoint.bash
    privileged: true
    # Not necessary when running in host network mode.
    #ports:
    #  - 8080:8080 # Passthrough for Jupyter Notebook
    #  - 1234:1234 # Passthrough for SSH
    environment:
      - "DISPLAY"
      - "QT_X11_NO_MITSHM=1" #fix some QT bugs
    volumes: 
      - /tmp/.X11-unix:/tmp/.X11-unix # Share X11 socket with container
      - $HOME/.Xauthority:/home/ros/.Xauthority # Share X11 permissions
      - ./container_files/ros-env:/workspace


    cap_add:
      - SYS_PTRACE
    command: bash -c "tail -f /dev/null"