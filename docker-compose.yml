# Based on https://github.com/gbalke/docker-ros2-opengl

version: '3.7'

services:

  ros2-zed:
    #user: "ros"
    network_mode: "host"
    image: smap:zed-wrapper
    container_name: zed-wrapper
    build:
      network: host
      context: .
      dockerfile: ./Docker/Dockerfile_zed.dockerfile
      args:
        # Base Image
        IMAGE_NAME: nvidia/cuda:11.4.1-devel-ubuntu20.04
        UBUNTU_VERSION: 20.04
        UBUNTU_RELEASE_YEAR: 20
        CUDA_VERSION: 11.4.2
        CUDA_MAJOR: 11
        CUDA_MINOR: 4
        ZED_SDK_MAJOR: 3
        ZED_SDK_MINOR: 8

        # ROS
        ROS_DISTRO: foxy
        WORKSPACE: /workspace
        RMW_IMPLEMENTATION_INSTALL: rmw-cyclonedds-cpp
        RMW_IMPLEMENTATION: rmw_cyclonedds_cpp
        ROS_DOMAIN_ID: 7

        # Entrypoint
        ENTRYPOINT_HOST_PATH: Docker/entrypoints/zed_entrypoint.bash

    privileged: true
    # Not necessary when running in host network mode.
    #ports:
    #  - 8080:8080 # Passthrough for Jupyter Notebook
    #  - 1234:1234 # Passthrough for SSH

      #https://linuxconfig.org/how-to-move-docker-s-default-var-lib-docker-to-another-directory-on-ubuntu-debian-linux
      # sudo mount --rbind /mnt/docker /var/lib/docker

    cap_add:
      - SYS_PTRACE
    command: >
      bash -c "
        export ROS_DOMAIN_ID=7 && 
        RMW_IMPLEMENTATION=rmw_cyclonedds_cpp ROS_DOMAIN_ID=7 ros2 launch zed_wrapper zed2.launch.py publish_tf:=false
      "

    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              capabilities: [gpu]

  ros2-env:
    user: "ros"
    network_mode: "host"
    image: smap:env
    container_name: smap-env
    build:
      network: host
      context: .
      dockerfile: ./Docker/Dockerfile_env.dockerfile
      #target: full-ros-nvidia-gazebo-turtlebot3
      args:
        # Base Image
        IMAGE_NAME: nvidia/cudagl:11.4.2-devel-ubuntu20.04
        UBUNTU_VERSION: 20.04
        CUDA_VERSION: 11.4.2
        GL_VERSION: 1.2

        # ROS
        ROS_DISTRO: foxy
        WORKSPACE: /workspace
        RMW_IMPLEMENTATION_INSTALL: rmw-cyclonedds-cpp
        RMW_IMPLEMENTATION: rmw_cyclonedds_cpp
        ROS_DOMAIN_ID: 7

        # Entrypoint
        ENTRYPOINT_HOST_PATH: Docker/entrypoints/env_entrypoint.bash

    privileged: true
    # Not necessary when running in host network mode.
    #ports:
    #  - 8080:8080 # Passthrough for Jupyter Notebook
    #  - 1234:1234 # Passthrough for SSH
    environment:
      - "DISPLAY"
      - "QT_X11_NO_MITSHM=1" #fix some QT bugs
    volumes: 
      - /tmp/.X11-unix:/tmp/.X11-unix # Share X11 socket with container
      - $HOME/.Xauthority:/home/ros/.Xauthority # Share X11 permissions
      - ./src:/workspace/src
      - ./scripts:/workspace/scripts
    cap_add:
      - SYS_PTRACE
    command: bash -c "tail -F /dev/null"
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              capabilities: [gpu]

  ros2-torch:
    user: "ros"
    network_mode: "host"
    image: smap:ros2-torch
    container_name: smap-torch
    build:
      network: host
      context: .
      target: env-setup
      dockerfile: ./Docker/Dockerfile_torch.dockerfile
      args:
        # Base Image
        IMAGE_NAME: nvidia/cudagl:11.4.2-devel-ubuntu20.04
        UBUNTU_VERSION: 20.04
        CUDA_VERSION: 11.4.2
        GL_VERSION: 1.2

        # ROS
        ROS_DISTRO: foxy
        WORKSPACE: /workspace
        RMW_IMPLEMENTATION_INSTALL: rmw-cyclonedds-cpp
        RMW_IMPLEMENTATION: rmw_cyclonedds_cpp
        ROS_DOMAIN_ID: 7

        ## ML
        # Pytorch
        #https://pytorch.org/get-started/previous-versions/
        PYTORCH: 1.12.1
        TORCH_CUDA: cu113
        TORCH_VISION: 0.13.1
        TORCH_AUDIO: 0.12.1

        # Entrypoint
        ENTRYPOINT_HOST_PATH: Docker/entrypoints/torch_entrypoint.bash

    privileged: true
    # Not necessary when running in host network mode.
    #ports:
    #  - 8080:8080 # Passthrough for Jupyter Notebook
    #  - 1234:1234 # Passthrough for SSH
    environment:
      - "DISPLAY"
      - "QT_X11_NO_MITSHM=1" #fix some QT bugs
    volumes: 
      - /tmp/.X11-unix:/tmp/.X11-unix # Share X11 socket with container
      - $HOME/.Xauthority:/home/ros/.Xauthority # Share X11 permissions
      - ./src/smap/smap_interfaces:/workspace/src/smap/smap_interfaces
      - ./src/smap/smap_classification_wrapper:/workspace/src/smap/smap_classification_wrapper
      - ./src/smap/smap-perception-yolo-v5:/workspace/src/smap/smap-perception-yolo-v5
    cap_add:
      - SYS_PTRACE
    command: > 
      bash -c "tail -F /dev/null"
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              capabilities: [gpu]


  ros2-torch-yolov5:
    user: "ros"
    network_mode: "host"
    image: smap:torch-yolov5
    container_name: smap-torch-yolov5
    build:
      network: host
      context: .
      #target: ml-torch
      target: yolo-v5
      dockerfile: ./Docker/Dockerfile_torch.dockerfile
      args:
        # Base Image
        IMAGE_NAME: nvidia/cudagl:11.4.2-devel-ubuntu20.04
        UBUNTU_VERSION: 20.04
        CUDA_VERSION: 11.4.2
        GL_VERSION: 1.2

        # ROS
        ROS_DISTRO: foxy
        WORKSPACE: /workspace
        RMW_IMPLEMENTATION_INSTALL: rmw-cyclonedds-cpp
        RMW_IMPLEMENTATION: rmw_cyclonedds_cpp
        ROS_DOMAIN_ID: 7

        ## ML
        # Pytorch
        #https://pytorch.org/get-started/previous-versions/
        PYTORCH: 1.12.1
        TORCH_CUDA: cu113
        TORCH_VISION: 0.13.1
        TORCH_AUDIO: 0.12.1

        # Entrypoint
        ENTRYPOINT_HOST_PATH: Docker/entrypoints/tolo_v5_entrypoint.bash
      #shm_size: '2gb' # <-- when BUILDING
    shm_size: '8gb' # <-- when RUNNING 

    privileged: true
    # Not necessary when running in host network mode.
    #ports:
    #  - 8080:8080 # Passthrough for Jupyter Notebook
    #  - 1234:1234 # Passthrough for SSH
    environment:
      - "DISPLAY"
      - "QT_X11_NO_MITSHM=1" #fix some QT bugs
    volumes: 
      - /tmp/.X11-unix:/tmp/.X11-unix # Share X11 socket with container
      - $HOME/.Xauthority:/home/ros/.Xauthority # Share X11 permissions
      - ./src/smap/smap_interfaces:/workspace/src/smap/smap_interfaces
      - ./src/smap/smap_classification_wrapper:/workspace/src/smap/smap_classification_wrapper
      - ./src/smap/smap-perception-yolo-v5:/workspace/src/smap/smap-perception-yolo-v5
      - torch-yolov5:/workspace/src/smap/smap-perception-yolo-v5/notebooks/yolo_v5/yolov5
      - datasets:/workspace/src/smap/smap-perception-yolo-v5/notebooks/yolo_v5/datasets
    cap_add:
      - SYS_PTRACE
    command: > 
      bash -c "
        jupyter-lab --no-browser --notebook-dir=src/smap/smap-perception-yolo-v5/notebooks/yolo_v5 --NotebookApp.token='' --NotebookApp.password='' --NotebookApp.username=''; 
        chmod 777 /dev/video0 ;
        tail -F /dev/null
      "
    #ros2 run smap-perception-yolo-v5 yolo_v5.py ; 
    #jupyter-lab --no-browser --notebook-dir=src/smap/smap-perception-yolo-v5/notebooks ;
    #bash -c "tail -F /dev/null"
      
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              capabilities: [gpu]


volumes:
  torch-yolov5:
    external: true
  datasets:
    external: true